{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar _colorLuminance = require('./utils');\nvar _getModal = require('./handle-swal-dom');\nvar _hasClass$isDescendant = require('./handle-dom');\n\n/*\n * User clicked on \"Confirm\"/\"OK\" or \"Cancel\"\n */\nvar handleButton = function handleButton(event, params, modal) {\n  var e = event || window.event;\n  var target = e.target || e.srcElement;\n  var targetedConfirm = target.className.indexOf('confirm') !== -1;\n  var targetedOverlay = target.className.indexOf('sweet-overlay') !== -1;\n  var modalIsVisible = _hasClass$isDescendant.hasClass(modal, 'visible');\n  var doneFunctionExists = params.doneFunction && modal.getAttribute('data-has-done-function') === 'true';\n\n  // Since the user can change the background-color of the confirm button programmatically,\n  // we must calculate what the color should be on hover/active\n  var normalColor, hoverColor, activeColor;\n  if (targetedConfirm && params.confirmButtonColor) {\n    normalColor = params.confirmButtonColor;\n    hoverColor = _colorLuminance.colorLuminance(normalColor, -0.04);\n    activeColor = _colorLuminance.colorLuminance(normalColor, -0.14);\n  }\n  function shouldSetConfirmButtonColor(color) {\n    if (targetedConfirm && params.confirmButtonColor) {\n      target.style.backgroundColor = color;\n    }\n  }\n  switch (e.type) {\n    case 'mouseover':\n      shouldSetConfirmButtonColor(hoverColor);\n      break;\n    case 'mouseout':\n      shouldSetConfirmButtonColor(normalColor);\n      break;\n    case 'mousedown':\n      shouldSetConfirmButtonColor(activeColor);\n      break;\n    case 'mouseup':\n      shouldSetConfirmButtonColor(hoverColor);\n      break;\n    case 'focus':\n      var $confirmButton = modal.querySelector('button.confirm');\n      var $cancelButton = modal.querySelector('button.cancel');\n      if (targetedConfirm) {\n        $cancelButton.style.boxShadow = 'none';\n      } else {\n        $confirmButton.style.boxShadow = 'none';\n      }\n      break;\n    case 'click':\n      var clickedOnModal = modal === target;\n      var clickedOnModalChild = _hasClass$isDescendant.isDescendant(modal, target);\n\n      // Ignore click outside if allowOutsideClick is false\n      if (!clickedOnModal && !clickedOnModalChild && modalIsVisible && !params.allowOutsideClick) {\n        break;\n      }\n      if (targetedConfirm && doneFunctionExists && modalIsVisible) {\n        handleConfirm(modal, params);\n      } else if (doneFunctionExists && modalIsVisible || targetedOverlay) {\n        handleCancel(modal, params);\n      } else if (_hasClass$isDescendant.isDescendant(modal, target) && target.tagName === 'BUTTON') {\n        sweetAlert.close();\n      }\n      break;\n  }\n};\n\n/*\n *  User clicked on \"Confirm\"/\"OK\"\n */\nvar handleConfirm = function handleConfirm(modal, params) {\n  var callbackValue = true;\n  if (_hasClass$isDescendant.hasClass(modal, 'show-input')) {\n    callbackValue = modal.querySelector('input').value;\n    if (!callbackValue) {\n      callbackValue = '';\n    }\n  }\n  params.doneFunction(callbackValue);\n  if (params.closeOnConfirm) {\n    sweetAlert.close();\n  }\n  // Disable cancel and confirm button if the parameter is true\n  if (params.showLoaderOnConfirm) {\n    sweetAlert.disableButtons();\n  }\n};\n\n/*\n *  User clicked on \"Cancel\"\n */\nvar handleCancel = function handleCancel(modal, params) {\n  // Check if callback function expects a parameter (to track cancel actions)\n  var functionAsStr = String(params.doneFunction).replace(/\\s/g, '');\n  var functionHandlesCancel = functionAsStr.substring(0, 9) === 'function(' && functionAsStr.substring(9, 10) !== ')';\n  if (functionHandlesCancel) {\n    params.doneFunction(false);\n  }\n  if (params.closeOnCancel) {\n    sweetAlert.close();\n  }\n};\nexports['default'] = {\n  handleButton: handleButton,\n  handleConfirm: handleConfirm,\n  handleCancel: handleCancel\n};\nmodule.exports = exports['default'];","map":{"version":3,"names":["Object","defineProperty","exports","value","_colorLuminance","require","_getModal","_hasClass$isDescendant","handleButton","event","params","modal","e","window","target","srcElement","targetedConfirm","className","indexOf","targetedOverlay","modalIsVisible","hasClass","doneFunctionExists","doneFunction","getAttribute","normalColor","hoverColor","activeColor","confirmButtonColor","colorLuminance","shouldSetConfirmButtonColor","color","style","backgroundColor","type","$confirmButton","querySelector","$cancelButton","boxShadow","clickedOnModal","clickedOnModalChild","isDescendant","allowOutsideClick","handleConfirm","handleCancel","tagName","sweetAlert","close","callbackValue","closeOnConfirm","showLoaderOnConfirm","disableButtons","functionAsStr","String","replace","functionHandlesCancel","substring","closeOnCancel","module"],"sources":["C:/Users/USER/Desktop/apna/node_modules/sweetalert/lib/modules/handle-click.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _colorLuminance = require('./utils');\n\nvar _getModal = require('./handle-swal-dom');\n\nvar _hasClass$isDescendant = require('./handle-dom');\n\n/*\n * User clicked on \"Confirm\"/\"OK\" or \"Cancel\"\n */\nvar handleButton = function handleButton(event, params, modal) {\n  var e = event || window.event;\n  var target = e.target || e.srcElement;\n\n  var targetedConfirm = target.className.indexOf('confirm') !== -1;\n  var targetedOverlay = target.className.indexOf('sweet-overlay') !== -1;\n  var modalIsVisible = _hasClass$isDescendant.hasClass(modal, 'visible');\n  var doneFunctionExists = params.doneFunction && modal.getAttribute('data-has-done-function') === 'true';\n\n  // Since the user can change the background-color of the confirm button programmatically,\n  // we must calculate what the color should be on hover/active\n  var normalColor, hoverColor, activeColor;\n  if (targetedConfirm && params.confirmButtonColor) {\n    normalColor = params.confirmButtonColor;\n    hoverColor = _colorLuminance.colorLuminance(normalColor, -0.04);\n    activeColor = _colorLuminance.colorLuminance(normalColor, -0.14);\n  }\n\n  function shouldSetConfirmButtonColor(color) {\n    if (targetedConfirm && params.confirmButtonColor) {\n      target.style.backgroundColor = color;\n    }\n  }\n\n  switch (e.type) {\n    case 'mouseover':\n      shouldSetConfirmButtonColor(hoverColor);\n      break;\n\n    case 'mouseout':\n      shouldSetConfirmButtonColor(normalColor);\n      break;\n\n    case 'mousedown':\n      shouldSetConfirmButtonColor(activeColor);\n      break;\n\n    case 'mouseup':\n      shouldSetConfirmButtonColor(hoverColor);\n      break;\n\n    case 'focus':\n      var $confirmButton = modal.querySelector('button.confirm');\n      var $cancelButton = modal.querySelector('button.cancel');\n\n      if (targetedConfirm) {\n        $cancelButton.style.boxShadow = 'none';\n      } else {\n        $confirmButton.style.boxShadow = 'none';\n      }\n      break;\n\n    case 'click':\n      var clickedOnModal = modal === target;\n      var clickedOnModalChild = _hasClass$isDescendant.isDescendant(modal, target);\n\n      // Ignore click outside if allowOutsideClick is false\n      if (!clickedOnModal && !clickedOnModalChild && modalIsVisible && !params.allowOutsideClick) {\n        break;\n      }\n\n      if (targetedConfirm && doneFunctionExists && modalIsVisible) {\n        handleConfirm(modal, params);\n      } else if (doneFunctionExists && modalIsVisible || targetedOverlay) {\n        handleCancel(modal, params);\n      } else if (_hasClass$isDescendant.isDescendant(modal, target) && target.tagName === 'BUTTON') {\n        sweetAlert.close();\n      }\n      break;\n  }\n};\n\n/*\n *  User clicked on \"Confirm\"/\"OK\"\n */\nvar handleConfirm = function handleConfirm(modal, params) {\n  var callbackValue = true;\n\n  if (_hasClass$isDescendant.hasClass(modal, 'show-input')) {\n    callbackValue = modal.querySelector('input').value;\n\n    if (!callbackValue) {\n      callbackValue = '';\n    }\n  }\n\n  params.doneFunction(callbackValue);\n\n  if (params.closeOnConfirm) {\n    sweetAlert.close();\n  }\n  // Disable cancel and confirm button if the parameter is true\n  if (params.showLoaderOnConfirm) {\n    sweetAlert.disableButtons();\n  }\n};\n\n/*\n *  User clicked on \"Cancel\"\n */\nvar handleCancel = function handleCancel(modal, params) {\n  // Check if callback function expects a parameter (to track cancel actions)\n  var functionAsStr = String(params.doneFunction).replace(/\\s/g, '');\n  var functionHandlesCancel = functionAsStr.substring(0, 9) === 'function(' && functionAsStr.substring(9, 10) !== ')';\n\n  if (functionHandlesCancel) {\n    params.doneFunction(false);\n  }\n\n  if (params.closeOnCancel) {\n    sweetAlert.close();\n  }\n};\n\nexports['default'] = {\n  handleButton: handleButton,\n  handleConfirm: handleConfirm,\n  handleCancel: handleCancel\n};\nmodule.exports = exports['default'];"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}