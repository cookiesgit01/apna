'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

require('./static/editor.css');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var content = void 0;

var Editor = function (_Component) {
  _inherits(Editor, _Component);

  function Editor(props) {
    _classCallCheck(this, Editor);

    var _this = _possibleConstructorReturn(this, (Editor.__proto__ || Object.getPrototypeOf(Editor)).call(this, props));

    _this.getContent = _this.getContent;
    _this.setImage = _this.setImage;
    return _this;
  }

  _createClass(Editor, [{
    key: 'getContent',
    value: function getContent() {
      return content ? encodeURIComponent(content.innerHTML.trim()) : '';
    }
  }, {
    key: 'setImage',
    value: function setImage(image) {
      content.focus();
      document.execCommand('insertImage', true, image);
    }
  }, {
    key: 'render',
    value: function render() {
      var styles = this.props.classObject;
      return _react2.default.createElement(
        'div',
        { className: styles.wrap || 'wrap' },
        _react2.default.createElement(
          'div',
          { className: styles.ctrl || 'ctrl' },
          _react2.default.createElement(
            'span',
            { draggable: 'true', onClick: function onClick() {
                return document.execCommand('bold');
              }, className: styles.iconfont || 'iconfont' },
            '\uE61D'
          ),
          _react2.default.createElement(
            'span',
            { draggable: 'true', onClick: function onClick() {
                return document.execCommand('italic');
              }, className: styles.iconfont || 'iconfont' },
            '\uE71A'
          ),
          _react2.default.createElement(
            'span',
            { draggable: 'true', onClick: function onClick() {
                return document.execCommand('insertUnorderedList');
              }, className: styles.iconfont || 'iconfont' },
            '\uE696'
          ),
          _react2.default.createElement(
            'span',
            { draggable: 'true', onClick: function onClick() {
                return document.execCommand('insertOrderedList');
              }, className: styles.iconfont || 'iconfont' },
            '\uE6C1'
          ),
          _react2.default.createElement(
            'span',
            { draggable: 'true', onClick: this.props.setImage, className: styles.iconfont || 'iconfont' },
            '\uE62D'
          ),
          _react2.default.createElement(
            'span',
            { draggable: 'true', onClick: function onClick() {
                return document.execCommand('undo');
              }, className: styles.iconfont || 'iconfont' },
            '\uE62C'
          )
        ),
        _react2.default.createElement('div', { className: styles.content || 'content',
          contentEditable: 'true',
          spellCheck: 'false',
          ref: function ref(n) {
            return content = n;
          },
          'data-placeholder': this.props.placeholder
        })
      );
    }
  }]);

  return Editor;
}(_react.Component);

Editor.defaultProps = {
  placeholder: 'content',
  classObject: {}
};

Editor.propTypes = {
  placeholder: _react2.default.PropTypes.string,
  setImage: _react2.default.PropTypes.func.isRequired
};

exports.default = Editor;